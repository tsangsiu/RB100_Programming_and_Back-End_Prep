# Case 1
x = 0
3.times do
  x += 1
end
puts x

# Case 2
y = 0
3.times do
  y += 1
  x = y
end
puts x

Question:
What does x print to the screen in each case? Do they both give errors? Are the
errors different? Why?

Answer:
For case 1, x prints 3 to the screen, while in case 2, the program throws a
NameError. They don't both give errors.

Considering case 1, x is initialized and assigned to 0 on the first line. It is
available to the inner scope created by the block following the method
invocation times. The code therefore allows adding 1 to x three times. Hence,
puts x results in printing 3 to the console.

Considering case 2, x is initialized in the inner scope created by the block
following the method invocation times. x is not available in the outer scope.
Hence, puts x results in a NameError.
